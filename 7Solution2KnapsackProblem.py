	if __name__=='__main__':
    #初始化
    chromosome_states=init()
    n=100
    while n>0:
        n-=1
        fitnesses=fitness(chromosome_states)  #适应度计算
        if is_finished(fitnesses): #判断是否收敛
            break
        select_index=fiter(chromosome_states,fitnesses)#遴选，产生下一代
        chromosome_states=crossover(chromosome_states,select_index)
        chromosome_states=mutation(chromosome_states)
        print(chromosome_states)
        print(fitnesses)
print('最优个体：',BEST)
#最后一代染色体 ['011100', '011010', '100101', '100100', '100101', '010011', '010011', '000110', '101100', '101001', '001110', '010110', '001100', '000110', '001100', '001110', '000110', '001110', '011001', '000011', '001101', '001101', '001101', '100101', '100110', '110110', '100101', '001010', '010011', '001100', '001100', '100010', '100110', '100001', '100011', '111100', '001101', '001101', '011110', '101100', '111001', '110110', '111100', '111100', '111001', '111100', '001101', '001100', '001001', '001101', '111100', '111100', '111100', '111100', '111100', '111100', '011100', '011011', '011010', '011001', '011100', '011100', '011010', '011100', '110101', '100110', '100101', '111100', '101001', '110101', '110101', '110110', '110110', '110110', '110010', '110110', '110101', '110110', '101001', '110110', '011100', '011100', '011001', '011000', '111001', '110010', '111001', '111001', '011101', '010101', '010101', '010110', '010101', '010011', '010101', '010101', '001110', '000110', '100011', '100001'] 
#各染色体适应度
[[110, 75], [110, 75], [100, 55], [135, 75], [135, 75], [135, 75], [110, 75], [25, 15], [110, 75], [110, 75], [110, 75], [125, 70], [115, 80], [95, 55], [60, 35], [100, 70], [100, 70], [100, 70], [105, 60], [140, 80], [140, 80], [140, 80], [100, 70], [115, 80], [100, 70], [100, 70], [115, 65], [120, 70], [120, 70], [60, 35], [115, 65], [105, 60], [115, 65], [80, 45], [120, 70], [115, 80], [75, 55], [120, 70], [120, 70], [80, 45], [120, 80], [120, 70], [120, 70], [55, 45], [120, 70], [95, 55], [85, 50], [140, 80], [60, 35], [100, 70], [100, 70], [85, 60], [120, 80], [120, 80], [140, 80], [110, 75], [110, 75], [110, 75], [80, 45], [120, 80], [90, 50], [40, 35], [100, 70], [140, 80], [100, 70], [105, 60], [115, 65], [100, 70], [135, 75], [135, 75], [90, 50], [135, 75], [75, 55], [75, 55], [95, 65], [80, 45], [110, 75], [105, 60], [90, 65], [95, 55], [95, 55], [100, 55], [85, 60], [85, 60], [65, 50], [120, 80], [100, 70], [100, 70], [100, 70], [100, 70], [105, 60]]
最优个体： ['110110', [140, 80]
